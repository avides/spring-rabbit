name: review

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  review:
    timeout-minutes: 30

    runs-on: ubuntu-latest

    steps:
      - name: setup-java
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
          token: ${{ secrets.GPR_TOKEN }}
          fetch-depth: ''

      - name: post-checkout
        run: git fetch --prune --unshallow

      - name: action-configuration-autoupdate
        id: actions_action_configuration_autoupdate
        uses: avides/actions-action-configuration-autoupdate@v1
        with:
          token: ${{ secrets.GPR_TOKEN }}
          actions-configuration-files: os-java-library/nightly.yml,os-java-library/release.yml,os-java-library/review.yml
          source-repository: ${{ secrets.ACTIONS_CONFIG_AUTOUPDATE_REPO }}

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          file_pattern: .github/workflows/*.yml
          commit_user_name: ${{ secrets.ACTIONS_CONFIG_AUTOUPDATE_USER }}
          commit_user_email: ${{ secrets.ACTIONS_CONFIG_AUTOUPDATE_EMAIL }}
          commit_author: ${{ secrets.ACTIONS_CONFIG_AUTOUPDATE_AUTHOR }}
          commit_message: Update GitHub Action configuration

      - name: action-configuration-updated
        if: ${{ steps.actions_action_configuration_autoupdate.outputs.updated }}
        run: exit 1;

      - name: project-version-check
        uses: avides/actions-project-version-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          file-to-check: pom.xml
          additional-files-to-check: README.md

      - name: caching
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: compile
        run: mvn clean compile test-compile

      - name: unit-tests
        run: mvn surefire:test

      - name: integration-tests
        run: mvn -DskipUTs -Dgpg.skip=true jacoco:restore-instrumented-classes verify

      - name: sonar-analyse
        env:
          SONAR_HOST: ${{ secrets.OS_SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.OS_SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          export SONAR_ORGANIZATION=$(echo ${GITHUB_REPOSITORY} | cut -d / -f 1)
          mvn sonar:sonar \
            -Dsonar.host.url=${SONAR_HOST} \
            -Dsonar.login=${SONAR_TOKEN} \
            -Dsonar.organization=${SONAR_ORGANIZATION} \
            -Dsonar.projectKey=${GITHUB_REPOSITORY//\//_} \
            -Dsonar.pullrequest.key=${{ github.event.number }} \
            -Dsonar.pullrequest.branch=${{ github.event.pull_request.head.ref }} \
            -Dsonar.scm.revision=${{ github.event.pull_request.head.sha }} \
            -Dsonar.java.binaries=./target/classes

      - name: pom-analyse
        run: mvn enforcer:enforce
